language: generic

os: osx
osx_image: xcode9.4

matrix:
  include:
  - name: "Python 2.7 Test"
    env: PYTHON=python2
  - name: "Python 3.6 Test"
    env: PYTHON=python3

addons:
  homebrew:
    packages:
    - gdal2
    - cmake
    - boost
    - tcl-tk

install:
    - ${PYTHON} -m pip install virtualenv
    - ${PYTHON} -m virtualenv env --system-site-packages
    - source env/bin/activate
    - ${PYTHON} -m pip install --upgrade --force-reinstall numpy
    - ${PYTHON} -m pip install scipy
    - if [ "${PYTHON}" == "python2" ]; then ${PYTHON} -m pip install mock; fi;
    - git clone https://thompsonsed@bitbucket.org/thompsonsed/pycoalescence.git
    - cd pycoalescence
    - git checkout develop
    - cd pycoalescence/lib
    - rm -rf necsim
    - git clone https://thompsonsed@bitbucket.org/thompsonsed/necsim.git
    - cd ../../../

script:
    - cd pycoalescence
    - ${PYTHON} setup.py install
    - cd pycoalescence/tests
    - export quick_test="True"
    - export bypass_gdal_warp="True"
    - ${PYTHON} -m unittest test_coalescence_tree
    - ${PYTHON} -m unittest test_dispersal_simulation
    - ${PYTHON} -m unittest test_fragment_config
    - ${PYTHON} -m unittest test_fragments
    - ${PYTHON} -m unittest test_helper
    - ${PYTHON} -m unittest test_landscape
    - ${PYTHON} -m unittest test_landscape_metrics
    - ${PYTHON} -m unittest test_map
    - ${PYTHON} -m unittest test_merger
    - ${PYTHON} -m unittest test_patched_landscape
    - ${PYTHON} -m unittest test_pause_resume
    - ${PYTHON} -m unittest test_simulation
    - ${PYTHON} -m unittest test_spatial_algorithms
    - ${PYTHON} -m unittest test_sqlite_connection
    - ${PYTHON} -m unittest test_system
    - ${PYTHON} -m unittest test_system_operations
#    - ${PYTHON} test_install.py --quick --bypass_gdal_warp TODO consider reverting to this method
    - echo "tests complete"
